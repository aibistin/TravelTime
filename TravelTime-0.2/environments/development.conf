# configuration file for development environment

# the logger engine to use
# console: log messages to STDOUT (your console where you started the
#          application server)
# file   =    logs/frack.log
#logger = "file"
logger = "console"

# the log level for this environment
# core is the lowest, it shows Dancer2's core log messages as well as yours
# (debug, info, warning and error)
log = "debug"

# should Dancer2 consider warnings as critical errors?
warnings  = 1

# should Dancer2 show a stacktrace when an error is caught?
show_errors = 1

# auto_reload is a development and experimental feature
# you should enable it by yourself if you want it
# Module::Refresh is needed 
# 
# Be aware it's unstable and may cause a memory leak.
# DO NOT EVER USE THIS FEATURE IN PRODUCTION 
# OR TINY KITTENS SHALL DIE WITH LOTS OF SUFFERING
auto_reload = 0

#------ Template Display Values
<Display>
    tm_title        = Mover Travel Time Calculator
    tm_heading_1    = Get the truck travel time between locations
    tm_heading_2    = NYC Mover Travel Times
    intro_message   = Enter your itinerary to get the travel times
    success_message = Google got the results
    error_page_heading     = Who Broke The Furniture
    error_message     = There are some errors!
    unknown_error_message = Something really bad happend! Sorry!
    result_heading    = Here are the times
    results_table_heading   = Truck Travel Time Table
  <Quick>
    what_to_do      = Type in the first letters of city until the required city is selected.
  </Quick>
</Display>

<Form>
  <Quick>
    form_method   = POST 
    form_name     = quick_form
  </Quick>
  <Ajax>

  </Ajax>

  <Detailed>
  </Detailed>
</Form>
#------ Specifics for a particular city
<City>
  <NYC>
    zip_code_three_max = 117 # max for first three digits of zip
  </NYC>
</City>
# Initialize the Origin or Destination Address
<Address>
    <origins 1>
        address_1 = 1 Columbus Circle
        city      = New York
        state     = NY
        zip       = 10019
        country   = USA
    </origins>
            #            {
            #                address_1 => '167 Exterior St.',
            #                address_2 => 'Parking Lot',
            #                city      => 'Bronx',
            #                state     => 'New York',
            #                country   => 'usa',
            #                zip       => '10451',
            #            }
#    <destinations 2>
#        address_1 = 1 Beale Street
#        city      = Memphis
#        state     = TN
#        zip       = 
#        country   = USA
#    </destinations>
    <destinations 1>
        address_1 = 12 Sate Street
        city      = Boston
        state     = MA
        zip       = 
        country   = USA
    </destinations>
</Address>

<Google>
  output_format = json   #  json or xml
  <Params>
    sensor      = 0
    mode        = driving # driving walking bicycling
    language    = en      # see google API docs 
    units       = imperial  # imperial metric
    avoid       =        # tolls highways
  </Params>
</Google>
<Bootstrap>
    <Typeahead>
        city_states_data        = ./public/javascripts/city_state.txt
        city_states_county_data = ./public/javascripts/city_state_county.txt
        city_db                 =  ./db/cities_db
        us_city_table           =  us_cities
    </Typeahead>
</Bootstrap>


